<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2024/07/19/2024-7-19-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2024/07/19/2024-7-19-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2><div class="timeline color]"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间线标题（可选）[</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>时间节点（标题）</p></div></div><div class='timeline-item-content'><p>正文内容</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>时间节点（标题）</p></div></div><div class='timeline-item-content'><p>正文内容</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二篇文章</title>
      <link href="/2024/07/19/2024-7-20-%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2024/07/19/2024-7-20-%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第二篇文章"><a href="#这是我的第二篇文章" class="headerlink" title="这是我的第二篇文章"></a>这是我的第二篇文章</h2><p><img src="https://raw.githubusercontent.com/wjt123666/pic_bed/main/img/cover_2.jpg" alt="哈喽这是我的第一篇文章"><br><i class="iconfont icon-taozi"></i><br></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第三篇文章</title>
      <link href="/2024/07/19/2024-7-21-%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2024/07/19/2024-7-21-%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第三篇文章"><a href="#这是我的第三篇文章" class="headerlink" title="这是我的第三篇文章"></a>这是我的第三篇文章</h2><p><i class="iconfont icon-xiongmao"></i></p><hr><hr>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四篇文章</title>
      <link href="/2024/07/19/2024-7-21%E7%AC%AC%E5%9B%9B%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2024/07/19/2024-7-21%E7%AC%AC%E5%9B%9B%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、MyBatis概述"><a href="#一、MyBatis概述" class="headerlink" title="一、MyBatis概述"></a>一、MyBatis概述</h1><h2 id="1-1-框架"><a href="#1-1-框架" class="headerlink" title="1.1 框架"></a>1.1 框架</h2><ul><li>在文献中看到的framework被翻译为框架</li><li>Java常用框架：<ul><li>SSM三大框架：Spring + SpringMVC + MyBatis</li><li>SpringBoot</li><li>SpringCloud</li><li>等。。</li></ul></li><li>框架其实就是对通用代码的封装，提前写好了一堆接口和类，我们可以在做项目的时候直接引入这些接口和类（引入框架），基于这些现有的接口和类进行开发，可以大大提高开发效率。</li><li>框架一般都以jar包的形式存在。(jar包中有class文件以及各种配置文件等。)</li><li><p>SSM三大框架的学习顺序：MyBatis、Spring、SpringMVC（仅仅是建议）</p><h2 id="1-2-三层架构"><a href="#1-2-三层架构" class="headerlink" title="1.2 三层架构"></a>1.2 三层架构</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/21376908/1659575815289-a76d30d9-f072-483a-bda7-b1fc8afc6f82.png#averageHue=%23d3d9de&amp;clientId=u6b7aa99c-2be4-4&amp;from=paste&amp;height=430&amp;id=u14695784&amp;originHeight=804&amp;originWidth=1448&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=95422&amp;status=done&amp;style=shadow&amp;taskId=ufba163d4-60f2-4941-b75a-4c34720010f&amp;title=&amp;width=775" alt="三层架构.png"></p></li><li><p>表现层（UI）：直接跟前端打交互（一是接收前端ajax请求，二是返回json数据给前端）</p></li><li>业务逻辑层（BLL）：一是处理表现层转发过来的前端请求（也就是具体业务），二是将从持久层获取的数据返回到表现层。</li><li>数据访问层（DAL）：直接操作数据库完成CRUD，并将获得的数据返回到上一层（也就是业务逻辑层）。</li><li><p>Java持久层框架：</p><ul><li>MyBatis</li><li>Hibernate（实现了JPA规范）</li><li>jOOQ</li><li>Guzz</li><li>Spring Data（实现了JPA规范）</li><li>ActiveJDBC</li><li>……<h2 id="1-3-JDBC不足"><a href="#1-3-JDBC不足" class="headerlink" title="1.3 JDBC不足"></a>1.3 JDBC不足</h2></li></ul></li><li><p>示例代码1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ......</span></span><br><span class="line"><span class="comment">// sql语句写死在java程序中</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into t_user(id,idCard,username,password,birth,gender,email,city,street,zipcode,phone,grade) values(?,?,?,?,?,?,?,?,?,?,?,?)&quot;</span>;</span><br><span class="line"><span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line"><span class="comment">// 繁琐的赋值：思考一下，这种有规律的代码能不能通过反射机制来做自动化。</span></span><br><span class="line">ps.setString(<span class="number">1</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">2</span>, <span class="string">&quot;123456789&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">3</span>, <span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">4</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">5</span>, <span class="string">&quot;1980-10-11&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">6</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">7</span>, <span class="string">&quot;zhangsan@126.com&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">8</span>, <span class="string">&quot;北京&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">9</span>, <span class="string">&quot;大兴区凉水河二街&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">10</span>, <span class="string">&quot;1000000&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">11</span>, <span class="string">&quot;16398574152&quot;</span>);</span><br><span class="line">ps.setString(<span class="number">12</span>, <span class="string">&quot;A&quot;</span>);</span><br><span class="line"><span class="comment">// 执行SQL</span></span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> ps.executeUpdate();</span><br><span class="line"><span class="comment">// ......</span></span><br></pre></td></tr></table></figure></li><li><p>示例代码2：<br>```java<br>// ……<br>// sql语句写死在java程序中<br>String sql = “select id,idCard,username,password,birth,gender,email,city,street,zipcode,phone,grade from t_user”;<br>PreparedStatement ps = conn.prepareStatement(sql);<br>ResultSet rs = ps.executeQuery();<br>List<User> userList = new ArrayList&lt;&gt;();<br>// 思考以下循环中的所有代码是否可以使用反射进行自动化封装。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> mybatis </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2016/03/30/2024-7-21%E7%AC%AC%E4%BA%94%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2016/03/30/2024-7-21%E7%AC%AC%E4%BA%94%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="16ba7b898341f796020478fb6d59648c2163aaec803f69e935db658d58a5122a">97b2b2fe323604bfc8fe2648fe3559752cd4295b5deed26eb4854648ec82cd2d6336da42d0eaea0d7866ddbbbf0e8c113d3758db225194bbc16f32d30bda6522681e69ab8670d5717b723689d3987b09b75d503d32d0dd31eb58a9ce8273980e525465d93a9098b7c35d4dba2c52ccccc061a859ea1893d4fd7010c1ffdebe3759e32845db72bfed2c8a14e289ab824a4ea884ec28a1842f818a215e1b68c9140a32e7d3a3b055a126a53ddb116fe1f79aec1461eb856f57004e2de690bcbb08c7df98149abe01d4ef3c335e324a9d4e327e4e440eadfe5e0e09d943df436dfd8fb13b6604b7f8c7cd393b7312124bfa0caa13426e0479df86ad1fa69010fd3ffde382f0701c5e2421e1f36e76d98fb438c3ee163595b21e28b033630157fc545243779bb482c261611d07c4f60f3167560963de0dabd49e70383ccb1238c596c84cfe6fe8f562fc20b65751f116010ed64eaf3fb610179873c58fb2511a3d154fbeaea7b017e2ba555709cc5441f8db0791232f64b19816b2f706cf07149cf115f08c78c8c0339fc620455a5fe3f16b603b619a1e7ff654aab057f3a61b5eef2cfbc9971b42b9adf362f50d3ae4ceff8fdaacaca63d4d2df7a1bfa0d9b56ca6604921d68ce5fbedb5dc5682cdbd67b401b43a4470c7c000ff7bf0dd9145408cb88140ddcc09593ea34c7cd8c0d20db4eff69abdf21367afa3f94206da75574d5cbea8b74c12176e706859848b98f51a786e40804ca3f0815703e398c3a16440a56764486c6e988ef2d4c1955c792c30aedfdc93f3b9bb94f1706b1abb009ee6fe61ac9e75096098f08ffcc2599ce4d3777bcf0a4325871483cb3acd91d89fa92a7194d2fbab303583641b7083c761c6de48ef3fe27fa60f961e6f3c0c6e219f3c4ff845bcf3d658d4c4ecf9f7f1079646d8973dcf9027477acfb0829351bedb8da81a1004c47d5df6848459429852c2ef056b82c16c0ffbaa495e1c0136c6c58b508ced9c51bfb72a095b6b0707d74778a013e0be9c827a9e3aec2ea57dd24b8a54fcd653d0ae677906cf639447e701cac4a1bafa0195a2448b7434b4a0f5fbdf90b902513a36578dc100ac08a67f878488b637742456a950166cfaf4240b239e4bdfad8d6bcb602f2983b72810d994295ae250caa42e9447ad642787f4124f179ace5d3747da743adca1f7f6ba5ccf3e1917781f010ecf4b8c5d06a27c4c716b8f31a95e33e19535343021e2ff176044c46aad5ac7af24166cb2417ed8ac3c20bf6d0cd8d730f46438a493ba8a1a31ff37045134ad1f10e742f61e25dea8f2e36d5765df3a3e217d0fb9867b944a90a32bd83ebcaaf3eaae3e8d1035de277291f2c7f2c6a14fdbd03c2e589b0589d91aab6aec75b3104d0dc76007eabb839d4a96350d06b322d3282180c8c82017250cb60e68437d3f57ffd5a025814c8430ea6e95bfe8386d60612204f6e7b5e9f6dc201127140bccf6b8097dc13276978994748eb406da223b168fb4916636741da7f171238d93f97d6d6a9eb3bb05000f137ff35a50585204ee31f1a68ee44421446b5406480ac2e9108bc1ddf2f3c376d812072efac8e65d4cec2393f66d135b04c461813bb55e6470ee27d4a3722efa9e4c8345f54529f6ac91b0c1b2c36f82ad17ec0b5e64b05c243b099feb8f1fbe8768ff815482ac3200386b78118996ad221bc1bb803da76103b8705f8fbf7cefdae79f53696b320ae570f6018229a0e305ac39d7b5daf357285826b014dc51ebf97d7e53ae72d8d9ba8358a1a1c0be65a533c4b4c1445d186be0c105ebefe0d891a745d3bb1d10ff1fa722d530095a450b58c96544f31c2a21ff6a9fa9d5c28ba892778397bb2dbc3e368b7dac28386a39d5a091cd751c4070cc9f850bb5fbf6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 作为日记加密 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
